/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Calendar;

import functionality.*;
/**
 *
 * @author Hang Xu
 */
public class AddBillGUI extends javax.swing.JFrame {

    
    /**
	 * 
	 */
	private static final long serialVersionUID = -2807506173109458916L;
	public AddBillGUI() {
        initComponents();
          Calendar c = Calendar.getInstance();
        int yearNow = c.get(Calendar.YEAR); 
        int monthNow = c.get(Calendar.MONTH)+1; 
        int dateNow = c.get(Calendar.DATE); 
        dayComboBox.setSelectedIndex(dateNow-1);
        monthComboBox.setSelectedIndex(monthNow-1);
        yearComboBox.setSelectedIndex(yearNow-2000);
        
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        monthComboBox = new javax.swing.JComboBox();
        dayComboBox = new javax.swing.JComboBox();
        roommate2Label = new javax.swing.JCheckBox();
        roommate1Label = new javax.swing.JCheckBox();
        roommate3Label = new javax.swing.JCheckBox();
        amountText = new javax.swing.JTextField();
        descriptionComboBox = new javax.swing.JComboBox();
        yearComboBox = new javax.swing.JComboBox();
        addBillButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        monthComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));
        monthComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboBoxActionPerformed(evt);
            }
        });

        dayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " " }));

        roommate2Label.setText("Marshall Eriksen");
        roommate2Label.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roommate2LabelActionPerformed(evt);
            }
        });

        roommate1Label.setText("Ted Mosby");

        roommate3Label.setText("Lily Aldrin");

        amountText.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        amountText.setForeground(new java.awt.Color(204, 204, 255));
        amountText.setText("Type amount here");
        amountText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                amountTextFocusGained(evt);
            }
        });

        descriptionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Other", "Cable", "Electricity", "Food ", "Gas", "Internet", "Rent", "Water" }));
        descriptionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionComboBoxActionPerformed(evt);
            }
        });

        yearComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", " " }));

        addBillButton.setText("Add");
        addBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBillButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        descriptionText.setColumns(20);
        descriptionText.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        descriptionText.setForeground(new java.awt.Color(204, 204, 255));
        descriptionText.setRows(5);
        descriptionText.setText("Type description here");
        descriptionText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DescriptionTextFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(descriptionText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(amountText)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(monthComboBox, 0, 187, Short.MAX_VALUE)
                                    .addComponent(roommate1Label, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(roommate2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(roommate3Label, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                .addGap(8, 8, 8))
                            .addComponent(descriptionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(yearComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addBillButton, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(addBillButton, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monthComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roommate2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roommate1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roommate3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(amountText, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(descriptionComboBox))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roommate2LabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roommate2LabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roommate2LabelActionPerformed

    private void descriptionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionComboBoxActionPerformed
        // TODO add your handling code here:
        if(descriptionComboBox.getSelectedIndex()!=0)
        {
            descriptionText.setFont(new Font("Tahoma",Font.ITALIC,24));
            descriptionText.setForeground(Color.black);
        }
        else{
            descriptionText.setText("Type description here");
            descriptionText.setForeground(new Color(204,204,255));
            
        }
        descriptionText.setText(descriptionComboBox.getSelectedItem().toString());
        
    }//GEN-LAST:event_descriptionComboBoxActionPerformed

    private void monthComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboBoxActionPerformed
       
    }//GEN-LAST:event_monthComboBoxActionPerformed

    private void addBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBillButtonActionPerformed
    	
    	this.userInputCheck();
    	Bill billToBeAdded = this.loadingNewBill();
        ExistingBill.add(billToBeAdded);
        BillCheckGUI totalBillGUI = new BillCheckGUI();
        totalBillGUI.billLoading();
        totalBillGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addBillButtonActionPerformed

    private void userInputCheck(){
    	this.nonSelectedCheck();
    	this.digitCheck();
    }
    private void nonSelectedCheck(){
    	if(!(roommate1Label.isSelected()||roommate2Label.isSelected()||roommate3Label.isSelected())){
    		WrongPopup noPersonSelected = new WrongPopup("At lease one person,please");
            noPersonSelected.setVisible(true);
            return;
    	}
    }
    private void digitCheck(){
    	String inputString = amountText.getText();
        int decimalPointCount =0;
        for(int stringIndex=inputString.length();--stringIndex>=0;)
        {
            if(Character.isDigit(inputString.charAt(stringIndex))) 
            {} 
            else  
            {    String toBeCheckedChar = ""+inputString.charAt(stringIndex);
                if(decimalPointCount<2&&toBeCheckedChar.equals(".")&&stringIndex>=1&&stringIndex<inputString.length()-1)
                {
                        decimalPointCount++;
                }
                else // if the input contains more than 1 decimal dot or it is not a digit
                {
                     WrongPopup wrongFormat = new WrongPopup("Digit only, please");
                     wrongFormat.setVisible(true);
                     return;
                }
               
            }
        }
    }
    private Bill loadingNewBill() {
		Date newDate = this.getDate();
		double newAmount = this.getAmount();
		NameList newNames = this.getNames();
		String newDesc = this.getDesc();
		return new Bill(newDate, newAmount, newNames, newDesc);
	}

    private Date getDate(){
    	int year = yearComboBox.getSelectedIndex() + 2000;
    	int month = monthComboBox.getSelectedIndex() + 1;
    	int day = dayComboBox.getSelectedIndex() + 1;
    	return new Date(year, month, day);
    }
    private double getAmount(){
    	String s = amountText.getText();
    	double amount = Double.parseDouble(s);
    	return amount;
    }
    private NameList getNames(){
    	NameList names = new NameList();
    	 if(roommate1Label.isSelected())
             names.add(roommate1Label.getText());
         if(roommate2Label.isSelected())
        	 names.add(roommate2Label.getText());
         if(roommate3Label.isSelected())
        	 names.add(roommate3Label.getText());
         return names;
    }
    private String getDesc(){
    	if(descriptionText.getText().equals("Type description here")&&descriptionText.getForeground()!=Color.black){
    		descriptionText.setText("");
    		}
    	return descriptionText.getText();
    }
    
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        BillCheckGUI billGUI = new BillCheckGUI();
        billGUI.billLoading();
        billGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void amountTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountTextFocusGained
        // TODO add your handling code here:
        if(amountText.getText().equals("Type amount here"))
        {
            amountText.setText(null);
            amountText.setFont(new Font("Tahoma",Font.ITALIC,24));
            amountText.setForeground(Color.black);
        }
    }//GEN-LAST:event_amountTextFocusGained

    private void DescriptionTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DescriptionTextFocusGained
        // TODO add your handling code here:
         if(descriptionText.getText().equals("Type description here"))
        {
            descriptionText.setText(null);
            descriptionText.setFont(new Font("Tahoma",Font.ITALIC,24));
            descriptionText.setForeground(Color.black);
        }
    }//GEN-LAST:event_DescriptionTextFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBillGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBillGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBillGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBillGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBillGUI().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descriptionText;
    private javax.swing.JButton addBillButton;
    private javax.swing.JTextField amountText;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox dayComboBox;
    private javax.swing.JComboBox descriptionComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox monthComboBox;
    private javax.swing.JCheckBox roommate1Label;
    private javax.swing.JCheckBox roommate2Label;
    private javax.swing.JCheckBox roommate3Label;
    private javax.swing.JComboBox yearComboBox;
    // End of variables declaration//GEN-END:variables
}
